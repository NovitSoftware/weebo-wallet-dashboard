table 'dwh Fact_Planes'

	measure TotalSaldoTarjetas = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])
			
			-- Limitar por el rango de fechas del calendario
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  -- Fecha mínima del filtro
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  -- Fecha máxima del filtro
			
			VAR Resultado =
			    CALCULATE(
			        SUM('dwh Fact_Planes'[SaldoTarjetasAdquiridas]),
			        'dwh Dim_Tiempo'[Fecha] >= MAX(FechaInicio, FechaMin),  -- Asegura que FechaInicio esté dentro del rango
			        'dwh Dim_Tiempo'[Fecha] <= MIN(FechaFinal, FechaMax),    -- Asegura que FechaFinal esté dentro del rango
			        'dwh Dim_Tiempo'[Fecha] <= FechaMax  -- Limita las fechas a las seleccionadas en CalendarioGeneral
			    )
			
			RETURN COALESCE(Resultado, 0)
			
			```
		formatString: 0

	measure PromedioSaldoTarjetas = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])
			
			-- Limitar por el rango de fechas del calendario
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  -- Fecha mínima del filtro
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  -- Fecha máxima del filtro
			
			VAR Resultado =
			    CALCULATE(
			        AVERAGE('dwh Fact_Planes'[SaldoTarjetasAdquiridas]),
			        'dwh Dim_Tiempo'[Fecha] >= MAX(FechaInicio, FechaMin),  -- Asegura que FechaInicio esté dentro del rango
			        'dwh Dim_Tiempo'[Fecha] <= MIN(FechaFinal, FechaMax),    -- Asegura que FechaFinal esté dentro del rango
			        'dwh Dim_Tiempo'[Fecha] <= FechaMax  -- Limita las fechas a las seleccionadas en CalendarioGeneral
			    )
			
			RETURN COALESCE(Resultado, 0)
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure VariacionSaldoTarjeta = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])
			
			-- Limitar por el rango de fechas del calendario
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  -- Fecha mínima del filtro
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  -- Fecha máxima del filtro
			
			-- Saldo acumulado hasta la FechaInicio
			VAR SaldoHastaInicio =
			    CALCULATE(
			        SUM('dwh Fact_Planes'[SaldoTarjetasAdquiridas]),
			        REMOVEFILTERS('dwh Dim_Tiempo'[Fecha]),
			        'dwh Dim_Tiempo'[Fecha] <= MAX(FechaInicio, FechaMin),  -- Asegura que FechaInicio esté dentro del rango
			        'dwh Dim_Tiempo'[Fecha] <= FechaMax  -- Limita las fechas a las seleccionadas en CalendarioGeneral
			    )
			
			-- Saldo acumulado hasta la FechaFinal
			VAR SaldoHastaFin =
			    CALCULATE(
			        SUM('dwh Fact_Planes'[SaldoTarjetasAdquiridas]),
			        REMOVEFILTERS('dwh Dim_Tiempo'[Fecha]),
			        'dwh Dim_Tiempo'[Fecha] <= MIN(FechaFinal, FechaMax),  -- Asegura que FechaFinal esté dentro del rango
			        'dwh Dim_Tiempo'[Fecha] <= FechaMax  -- Limita las fechas a las seleccionadas en CalendarioGeneral
			    )
			
			-- Cálculo de la variación
			VAR Resultado = SaldoHastaFin - SaldoHastaInicio
			
			RETURN IF(Resultado = 0, 0, COALESCE(Resultado, 0))
			
			```
		formatString: 0

	measure PromedioStickers = ```
			
			AVERAGEX(
			    FILTER(
			        'dwh Fact_Planes', 
			        NOT(ISBLANK('dwh Fact_Planes'[StickersEntregados]))
			    ),
			    'dwh Fact_Planes'[StickersEntregados]
			)
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure PromedioStickersPorTarjeta = ```
			
			DIVIDE(
			    SUMX('dwh Fact_Planes', COALESCE('dwh Fact_Planes'[StickersEntregados], 0)),
			    SUM('dwh Fact_Planes'[TarjetasActivadas]),
			    0
			)
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure TarjetasCompradas =
			
			COALESCE(SUM('dwh Fact_Planes'[TarjetasAdquiridas]),0)
		formatString: 0

	column KeyFactPlan
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: KeyFactPlan

		annotation SummarizationSetBy = Automatic

	column KeyFechaCorte
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyFechaCorte

		annotation SummarizationSetBy = Automatic

	column KeyEmpresa
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyEmpresa

		annotation SummarizationSetBy = Automatic

	column TarjetasAdquiridasAcumulado
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: TarjetasAdquiridasAcumulado

		annotation SummarizationSetBy = Automatic

	column TarjetasActivadasAcumulado
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: TarjetasActivadasAcumulado

		annotation SummarizationSetBy = Automatic

	column TarjetasAdquiridas
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: TarjetasAdquiridas

		annotation SummarizationSetBy = Automatic

	column TarjetasActivadas
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: TarjetasActivadas

		annotation SummarizationSetBy = Automatic

	column SaldoTarjetasAdquiridas
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: SaldoTarjetasAdquiridas

		annotation SummarizationSetBy = Automatic

	column StickersEntregadosAcumulado
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: StickersEntregadosAcumulado

		annotation SummarizationSetBy = Automatic

	column StickersEntregados
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: StickersEntregados

		annotation SummarizationSetBy = Automatic

	partition 'dwh Fact_Planes' = m
		mode: import
		source =
				let
				    Source = Sql.Databases("40.79.18.177"),
				    ApployaltyDWH = Source{[Name="ApployaltyDWH"]}[Data],
				    dwh_Fact_Planes = ApployaltyDWH{[Schema="dwh",Item="Fact_Planes"]}[Data]
				in
				    dwh_Fact_Planes

