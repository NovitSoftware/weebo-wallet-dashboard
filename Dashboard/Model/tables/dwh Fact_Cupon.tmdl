table 'dwh Fact_Cupon'

	measure TotalStickersEntregados = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])  -- Fecha de inicio seleccionada
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])    -- Fecha final seleccionada
			
			-- Limitar las fechas del rango
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  -- Fecha mínima del calendario
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  -- Fecha máxima del calendario
			
			RETURN 
			COALESCE(
			    CALCULATE (
			        SUMX (
			            SUMMARIZE (
			                'dwh Fact_Cupon', 
			                'dwh Fact_Cupon'[KeyEmpresa],  -- Agrupar por empresa
			                'dwh Fact_Cupon'[KeyAfiliado], -- Agrupar también por afiliado
			                "MaxStickers", MAX('dwh Fact_Cupon'[StickersEntregados])  -- Obtener el máximo de stickers entregados
			            ), 
			            [MaxStickers]  -- Sumar los stickers entregados
			        ),
			        'dwh Dim_Tiempo'[Fecha] >= MAX(FechaInicio, FechaMin) && 'dwh Dim_Tiempo'[Fecha] <= MIN(FechaFinal, FechaMax)  -- Filtrar por el rango de fechas
			    ),"NA")
			
			```
		formatString: 0

	measure EntregadosVariacionStickers = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])  -- Fecha de inicio seleccionada
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])    -- Fecha final seleccionada
			
			-- Limitar las fechas del rango
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  -- Fecha mínima del calendario
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  -- Fecha máxima del calendario
			
			-- Stickers entregados acumulados hasta FechaInicio
			VAR StickersInicio =
			    CALCULATE (
			        SUMX (
			            VALUES('dwh Fact_Cupon'[KeyAfiliado]),  -- Para cada afiliado
			            MAX('dwh Fact_Cupon'[StickersEntregados])  -- Obtener el máximo de stickers entregados
			        ),
			        'dwh Dim_Tiempo'[Fecha] <= MAX(FechaInicio, FechaMin)  -- Filtrar por fecha de inicio
			    )
			
			-- Stickers entregados acumulados hasta FechaFinal
			VAR StickersFin =
			    CALCULATE (
			        SUMX (
			            VALUES('dwh Fact_Cupon'[KeyAfiliado]),  -- Para cada afiliado
			            MAX('dwh Fact_Cupon'[StickersEntregados])  -- Obtener el máximo de stickers entregados
			        ),
			        'dwh Dim_Tiempo'[Fecha] <= MIN(FechaFinal, FechaMax)  -- Filtrar por fecha final
			    )
			
			-- Retornar la variación de stickers entregados
			RETURN
			    COALESCE(StickersFin - StickersInicio,"NA")  -- Variación entre la fecha final e inicio
			
			```
		formatString: 0

	measure PromedioStickersPorEmpresa = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])  -- Fecha de inicio seleccionada
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])    -- Fecha final seleccionada
			
			-- Limitar las fechas del rango
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  -- Fecha mínima del calendario
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  -- Fecha máxima del calendario
			
			RETURN 
			COALESCE(
			    CALCULATE (
			        AVERAGEX (
			            SUMMARIZE (
			                'dwh Fact_Cupon',
			                'dwh Fact_Cupon'[KeyEmpresa],   -- Agrupar por empresa
			                'dwh Fact_Cupon'[KeyAfiliado],  -- Agrupar también por afiliado
			                "MaxStickers", MAX('dwh Fact_Cupon'[StickersEntregados])  -- Máximo de stickers entregados por afiliado
			            ),
			            [MaxStickers]  -- Promediar el máximo de stickers entregados por afiliado
			        ),
			        'dwh Dim_Tiempo'[Fecha] >= MAX(FechaInicio, FechaMin) && 'dwh Dim_Tiempo'[Fecha] <= MIN(FechaFinal, FechaMax),  -- Rango de fechas
			        REMOVEFILTERS('dwh Fact_Cupon'[KeyEmpresa])  -- Eliminar el filtro de la empresa para que no afecte al cálculo
			    )
			,"NA")
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure TotalStickerActivos = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])  
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])    
			
			-- Limitar las fechas al rango permitido
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  
			
			VAR Resultado = 
			    SUMX(
			        SUMMARIZE(
			            'dwh Fact_Cupon',
			            'dwh Fact_Cupon'[KeyEmpresa],
			            'dwh Fact_Cupon'[KeyAfiliado],
			            "MaxStickers", MAX('dwh Fact_Cupon'[StickersActivos])
			        ),
			        [MaxStickers]
			    )
			
			RETURN 
			    IF(ISBLANK(Resultado), "NA", Resultado)
			
			```
		formatString: 0

	measure VariacionStickersActivos = ```
			
			VAR FechaRaiz = MAX( MIN('dwh Dim_Tiempo'[Fecha]), MIN('CalendarioGeneral'[Date]) )  
			VAR FechaFin = MIN( MAX('dwh Dim_Tiempo'[Fecha]), MAX('CalendarioGeneral'[Date]) )  
			
			-- Stickers activos acumulados hasta la FechaRaiz
			VAR StickersInicio =
			    CALCULATE (
			        SUMX (
			            VALUES('dwh Fact_Cupon'[KeyAfiliado]),
			            MAX('dwh Fact_Cupon'[StickersActivos])
			        ),
			        'dwh Dim_Tiempo'[Fecha] <= FechaRaiz
			    )
			
			-- Stickers activos acumulados hasta la FechaFin
			VAR StickersFin =
			    CALCULATE (
			        SUMX (
			            VALUES('dwh Fact_Cupon'[KeyAfiliado]),
			            MAX('dwh Fact_Cupon'[StickersActivos])
			        ),
			        'dwh Dim_Tiempo'[Fecha] <= FechaFin
			    )
			
			-- Retornar la variación, asegurando que si el resultado es blanco, devuelva 0
			RETURN
			    IF(ISBLANK(StickersFin - StickersInicio), "NA", StickersFin - StickersInicio)
			
			```
		formatString: 0

	measure PromedioStickersGeneral = ```
			
			VAR FechaInicio = SELECTEDVALUE(UltimasFechasGeneral[Fecha Inicial])  
			VAR FechaFinal = SELECTEDVALUE(UltimasFechasGeneral[Fecha Final])    
			
			-- Limitar las fechas al rango permitido
			VAR FechaMin = MIN('CalendarioGeneral'[Date])  
			VAR FechaMax = MAX('CalendarioGeneral'[Date])  
			
			VAR Resultado =
			    AVERAGEX (
			        SUMMARIZE (
			            'dwh Fact_Cupon',
			            'dwh Fact_Cupon'[KeyAfiliado],
			            "MaxStickers", MAX('dwh Fact_Cupon'[StickersActivos])
			        ),
			        [MaxStickers]
			    )
			
			RETURN 
			    IF(ISBLANK(Resultado), "NA", Resultado)
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure TasaRedencionCupones = ```
			
			COALESCE(
			    DIVIDE(
			        SUM('dwh Fact_Cupon'[FlagCuponRedimido]), 
			        COUNTROWS('dwh Fact_Cupon'),
			        0
			    ),"NA")
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure TotalCuponesActivos = ```
			
			COALESCE(
			CALCULATE(
			    COUNT('dwh Fact_Cupon'[KeyCupon]),
			    'dwh Fact_Cupon'[FlagCuponVigente] = 1,
			    'dwh Fact_Cupon'[FlagCuponVencido] = 0
			),0)
			
			```
		formatString: 0

	measure TotalCuponesEnProceso = ```
			
			COALESCE(
			CALCULATE(
			    COUNT('dwh Fact_Cupon'[KeyCupon]),
			    'dwh Fact_Cupon'[FlagCuponVigente] = 0,
			    'dwh Fact_Cupon'[FlagCuponVencido] = 0
			),0)
			
			```
		formatString: 0

	measure TotalCuponesVencidos = ```
			
			COALESCE(
			CALCULATE(
			    COUNT('dwh Fact_Cupon'[KeyCupon]),
			    'dwh Fact_Cupon'[FlagCuponVencido] = 1
			),0)
			
			```
		formatString: 0

	measure TotalStickerVencidos =
			
			CALCULATE(
			    SUM('dwh Fact_Cupon'[StickersEntregados]),
			    'dwh Fact_Cupon'[FlagCuponVencido] = 1
			)
		formatString: 0

	measure 'Promedio Días Hasta Redimir Cupón' = ```
			
			VAR TotalDias = 
			    SUMX(
			        FILTER( 'dwh Fact_Cupon', 'dwh Fact_Cupon'[FlagCuponRedimido] = 1 ), 
			        'dwh Fact_Cupon'[DiasHastaRedimirCupon]
			    )
			VAR CantidadCupones = 
			    COUNTROWS( 
			        FILTER( 'dwh Fact_Cupon', 'dwh Fact_Cupon'[FlagCuponRedimido] = 1 ) 
			    )
			
			RETURN 
			    COALESCE(DIVIDE(TotalDias, CantidadCupones, BLANK()),"NA")
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ConteoFechaActivacion =
			
			COALESCE(
			    CALCULATE(
			        COUNT('dwh Fact_Cupon'[FechaActivacion]),
			        NOT(ISBLANK('dwh Fact_Cupon'[FechaActivacion]))
			        ),
			    "NA")

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure ConteoFlagCuponRedimido_1 =
			
			COALESCE(
			    CALCULATE(
			        COUNT('dwh Fact_Cupon'[FlagCuponRedimido]),
			        'dwh Fact_Cupon'[FlagCuponRedimido] = 1
			    ),
			"NA")
		formatString: 0

	measure ConteoFlagCuponVencido_1 = ```
			
			COALESCE(
			    CALCULATE(
			        COUNT('dwh Fact_Cupon'[FlagCuponVencido]),
			        'dwh Fact_Cupon'[FlagCuponVencido] = 1 
			    ),
			"NA")
			```
		formatString: 0

	measure PromedioDiasHastaObtenerCuponFiltrado = ```
			
			COALESCE(
			CALCULATE(
			    AVERAGE('dwh Fact_Cupon'[DiasHastaObtenerCupon]),
			    'dwh Fact_Cupon'[DiasHastaObtenerCupon] <> 0,
			    NOT(ISBLANK('dwh Fact_Cupon'[DiasHastaObtenerCupon]))
			),"NA")
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column KeyFactCupon
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: KeyFactCupon

		annotation SummarizationSetBy = Automatic

	column KeyFechaCorte
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyFechaCorte

		annotation SummarizationSetBy = Automatic

	column KeyAfiliado
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyAfiliado

		annotation SummarizationSetBy = Automatic

	column KeyRangoEdad
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyRangoEdad

		annotation SummarizationSetBy = Automatic

	column KeyEmpresa
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyEmpresa

		annotation SummarizationSetBy = Automatic

	column KeyTarjeta
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyTarjeta

		annotation SummarizationSetBy = Automatic

	column KeyCupon
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyCupon

		annotation SummarizationSetBy = Automatic

	column FechaCreacion
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: FechaCreacion

		variation Variation
			isDefault
			relationship: 6e80a370-a190-4ee7-be5b-8361f320bcd4
			defaultHierarchy: LocalDateTable_7890a3ce-bcc2-43c1-8a93-bb606cae985d.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column FechaUso
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: FechaUso

		variation Variation
			isDefault
			relationship: 9e178f90-5bf2-4642-915e-198d358273b6
			defaultHierarchy: LocalDateTable_f3ebc67f-fcd8-4fdd-87ee-7defd885046c.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column FechaActivacion
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: FechaActivacion

		variation Variation
			isDefault
			relationship: 8d534bd9-01ee-4c65-8df4-98007da70965
			defaultHierarchy: LocalDateTable_b6b5a36c-377b-4033-9506-fe5d43f4f960.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column TarjetasEntregadas
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: TarjetasEntregadas

		annotation SummarizationSetBy = Automatic

	column FlagCuponRedimido
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: FlagCuponRedimido

		annotation SummarizationSetBy = Automatic

	column FlagCuponRedimidoAcumulado
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: FlagCuponRedimidoAcumulado

		annotation SummarizationSetBy = Automatic

	column FlagCuponVencido
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: FlagCuponVencido

		annotation SummarizationSetBy = Automatic

	column FlagCuponVencidoAcumulado
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: FlagCuponVencidoAcumulado

		annotation SummarizationSetBy = Automatic

	column FlagCuponVigente
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: FlagCuponVigente

		annotation SummarizationSetBy = Automatic

	column DiasHastaObtenerCupon
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: DiasHastaObtenerCupon

		annotation SummarizationSetBy = Automatic

	column DiasHastaRedimirCupon
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: DiasHastaRedimirCupon

		annotation SummarizationSetBy = Automatic

	column StickersActivos
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: StickersActivos

		annotation SummarizationSetBy = Automatic

	column StickersActivosAcumulado
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: StickersActivosAcumulado

		annotation SummarizationSetBy = Automatic

	column StickersEntregados
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: StickersEntregados

		annotation SummarizationSetBy = Automatic

	column StickersEntregadosAcumulado
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: StickersEntregadosAcumulado

		annotation SummarizationSetBy = Automatic

	column EstadoCupon = ```
			
			SWITCH(
			    TRUE(),
			    'dwh Fact_Cupon'[FlagCuponVigente] = 1 && 'dwh Fact_Cupon'[FlagCuponVencido] = 0, "Activo",
			    'dwh Fact_Cupon'[FlagCuponVencido] = 1, "Vencido",
			    "Proceso"
			)
			
			```
		summarizeBy: none

		annotation SummarizationSetBy = Automatic

	column DiasHastaObtenerCuponFiltrado = ```
			
			IF(
			    NOT(ISBLANK('dwh Fact_Cupon'[DiasHastaObtenerCupon])),
			    'dwh Fact_Cupon'[DiasHastaObtenerCupon],
			    BLANK()
			)
			
			```
		formatString: 0
		summarizeBy: sum

		annotation SummarizationSetBy = Automatic

	partition 'dwh Fact_Cupon' = m
		mode: import
		source =
				let
				    Source = Sql.Databases("40.79.18.177"),
				    ApployaltyDWH = Source{[Name="ApployaltyDWH"]}[Data],
				    dwh_Fact_Cupon = ApployaltyDWH{[Schema="dwh",Item="Fact_Cupon"]}[Data]
				in
				    dwh_Fact_Cupon

