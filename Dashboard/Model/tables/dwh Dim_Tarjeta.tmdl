table 'dwh Dim_Tarjeta'

	measure TotalTarjetasActivadas =
			
			COALESCE(
			CALCULATE(
			    COUNTROWS('dwh Dim_Tarjeta'),
			    'dwh Dim_Tarjeta'[FechaActivo] >= MIN('dwh Dim_Tarjeta'[FechaActivo]) && 'dwh Dim_Tarjeta'[FechaActivo] <= MAX('dwh Dim_Tarjeta'[FechaActivo]),
			    NOT ISBLANK('dwh Dim_Tarjeta'[FechaActivo])
			)
			, "NA")
		formatString: 0

	measure VariacionTarjetasActivas = ```
			
			VAR FechaRaiz = MIN('CalendarioGeneral'[Date])
			VAR FechaFin = MAX('CalendarioGeneral'[Date])
			
			-- Tarjetas activas hasta la FechaRaiz
			VAR TarjetasActivasHastaInicio = 
			    CALCULATE(
			        COUNT('dwh Dim_Tarjeta'[KeyTarjeta]),
			        'dwh Dim_Tarjeta'[FechaActivo] <= FechaRaiz
			    )
			
			-- Tarjetas activas hasta la FechaFin
			VAR TarjetasActivasHastaFin = 
			    CALCULATE(
			        COUNT('dwh Dim_Tarjeta'[KeyTarjeta]),
			        'dwh Dim_Tarjeta'[FechaActivo] <= FechaFin
			    )
			
			-- Variación entre los dos períodos
			RETURN COALESCE(TarjetasActivasHastaFin - TarjetasActivasHastaInicio, "NA")
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	measure PromedioTarjetasActivadasPorDia = ```
			
			VAR DiasEnRango = 
			    CALCULATE(
			        COUNTROWS(VALUES('dwh Dim_Tarjeta'[FechaActivo])),  -- Cuenta los días únicos dentro del rango
			        'dwh Dim_Tarjeta'[FechaActivo] >= MIN('CalendarioGeneral'[Date]) && 
			        'dwh Dim_Tarjeta'[FechaActivo] <= MAX('CalendarioGeneral'[Date])
			    )
			
			VAR TotalTarjetasActivadas = 
			    CALCULATE(
			        COUNTROWS('dwh Dim_Tarjeta'),  -- Cuenta todas las tarjetas activadas
			        'dwh Dim_Tarjeta'[FechaActivo] >= MIN('CalendarioGeneral'[Date]) && 
			        'dwh Dim_Tarjeta'[FechaActivo] <= MAX('CalendarioGeneral'[Date]) &&
			        'dwh Dim_Tarjeta'[FechaActivo] <> BLANK()  -- Asegura que la fecha no sea nula
			    )
			
			RETURN
			    COALESCE(DIVIDE(TotalTarjetasActivadas, DiasEnRango, 0), "NA")  -- Calcula el promedio
			
			```

		annotation PBI_FormatHint = {"isGeneralNumber":true}

	column KeyTarjeta
		dataType: int64
		formatString: 0
		summarizeBy: none
		sourceColumn: KeyTarjeta

		annotation SummarizationSetBy = Automatic

	column KeyTarjetaAlt
		dataType: int64
		formatString: 0
		summarizeBy: sum
		sourceColumn: KeyTarjetaAlt

		annotation SummarizationSetBy = Automatic

	column Tarjeta
		dataType: string
		summarizeBy: none
		sourceColumn: Tarjeta

		annotation SummarizationSetBy = Automatic

	column FechaCreacion
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: FechaCreacion

		variation Variation
			isDefault
			relationship: 147bdb58-d5bc-47af-8e17-24c5b42cff28
			defaultHierarchy: LocalDateTable_d0f81d21-32c4-440b-92bd-b255d882f733.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	column FechaActivo
		dataType: dateTime
		formatString: Long Date
		summarizeBy: none
		sourceColumn: FechaActivo

		variation Variation
			isDefault
			relationship: 8d96097c-2685-48b2-b90c-b3b5e9bf1496
			defaultHierarchy: LocalDateTable_1ade2857-01bd-49f9-8176-08e476f004c9.'Date Hierarchy'

		annotation SummarizationSetBy = Automatic

		annotation UnderlyingDateTimeDataType = Date

	partition 'dwh Dim_Tarjeta' = m
		mode: import
		source =
				let
				    Source = Sql.Databases("LocalHost"),
				    ApployaltyDWH = Source{[Name="ApployaltyDWH"]}[Data],
				    dwh_Dim_Tarjeta = ApployaltyDWH{[Schema="dwh",Item="Dim_Tarjeta"]}[Data]
				in
				    dwh_Dim_Tarjeta

